clickhouse-client --send_logs_level=trace <<< "
SELECT
    toYear(LO_ORDERDATE) AS year,
    sum(LO_REVENUE - LO_SUPPLYCOST) AS profit
FROM sausage.lineorder_all AS l
GLOBAL ANY LEFT JOIN sausage.customer_all AS c ON c.C_CUSTKEY = l.LO_CUSTKEY
GLOBAL ANY LEFT JOIN sausage.supplier_all AS s ON s.S_SUPPKEY = l.LO_SUPPKEY
GLOBAL ANY LEFT JOIN sausage.part_all AS p ON p.P_PARTKEY = l.LO_PARTKEY
WHERE C_REGION = 'AMERICA'
GROUP BY year
ORDER BY year ASC;
" > /dev/null

[clickhouse] 2021.08.13 07:18:37.581861 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> executeQuery: (from [::1]:46614, using production parser) SELECT toYear(LO_ORDERDATE) AS year, sum(LO_REVENUE - LO_SUPPLYCOST) AS profit FROM sausage.lineorder_all l GLOBAL ANY left JOIN sausage.customer_all c ON (c.C_CUSTKEY = l.LO_CUSTKEY) GLOBAL ANY left JOIN sausage.supplier_all s ON (s.S_SUPPKEY = l.LO_SUPPKEY) GLOBAL ANY left JOIN sausage.part_all p ON (p.P_PARTKEY = l.LO_PARTKEY) WHERE C_REGION = 'AMERICA' GROUP BY year ORDER BY year;
[clickhouse] 2021.08.13 07:18:37.582665 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_REGION) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:37.583207 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_REGION) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:37.582804 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(LO_CUSTKEY, LO_PARTKEY, LO_SUPPKEY, LO_ORDERDATE, LO_REVENUE, LO_SUPPLYCOST) ON sausage.lineorder_all
[clickhouse] 2021.08.13 07:18:37.583330 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(LO_CUSTKEY, LO_PARTKEY, LO_SUPPKEY, LO_ORDERDATE, LO_REVENUE, LO_SUPPLYCOST) ON sausage.lineorder_all
[clickhouse] 2021.08.13 07:18:37.583557 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(S_SUPPKEY) ON sausage.supplier_all
[clickhouse] 2021.08.13 07:18:37.584033 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:37.584209 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all

[clickhouse] 2021.08.13 07:18:37.584388 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:37.584475 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:37.584561 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: WithMergeableState -> Complete
[clickhouse] 2021.08.13 07:18:37.584643 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:37.584912 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1223/1223 marks by primary key, 1223 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:37.585095 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 10000828 rows with 4 streams
[clickhouse] 2021.08.13 07:18:37.616259 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> Connection (ecs-sausage-test-0012:9000): Connecting. Database: (not specified). User: default
[clickhouse] 2021.08.13 07:18:37.616915 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> Connection (ecs-sausage-test-0012:9000): Connected to ClickHouse server version 21.7.5.
[clickhouse] 2021.08.13 07:18:37.617273 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> Connection (ecs-sausage-test-0013:9000): Connecting. Database: (not specified). User: default
[clickhouse] 2021.08.13 07:18:37.617874 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> Connection (ecs-sausage-test-0013:9000): Connected to ClickHouse server version 21.7.5.
[clickhouse] 2021.08.13 07:18:38.346832 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 1.00 GiB.

[clickhouse] 2021.08.13 07:18:37.617586 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Debug> executeQuery: (from 192.168.0.38:49760, initial_query_id: c61a337a-035a-4206-8ccc-605e53a9a457, using production parser) SELECT C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT FROM sausage.customer_local
[clickhouse] 2021.08.13 07:18:37.617926 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:37.617971 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:37.618053 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:37.618266 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1222/1222 marks by primary key, 1222 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:37.618449 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 10000049 rows with 4 streams
[clickhouse] 2021.08.13 07:18:41.367409 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Information> executeQuery: Read 10000049 rows, 797.56 MiB in 3.749786663 sec., 2666831 rows/sec., 212.70 MiB/sec.
[clickhouse] 2021.08.13 07:18:41.367449 [ 51 ] {a9399729-92f3-47df-8e52-fa8db236ae7c} <Debug> MemoryTracker: Peak memory usage (for query): 54.24 MiB.

[clickhouse] 2021.08.13 07:18:37.618426 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Debug> executeQuery: (from 192.168.0.38:59332, initial_query_id: c61a337a-035a-4206-8ccc-605e53a9a457, using production parser) SELECT C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT FROM sausage.customer_local
[clickhouse] 2021.08.13 07:18:37.618769 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:37.618817 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:37.618880 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:37.619125 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1223/1223 marks by primary key, 1223 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:37.619311 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 9999123 rows with 4 streams
[clickhouse] 2021.08.13 07:18:41.295629 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Information> executeQuery: Read 9999123 rows, 797.45 MiB in 3.677172533 sec., 2719242 rows/sec., 216.87 MiB/sec.
[clickhouse] 2021.08.13 07:18:41.295666 [ 589 ] {e5a2c183-2aeb-4bbd-9631-a4c1813d3bbd} <Debug> MemoryTracker: Peak memory usage (for query): 51.04 MiB.

[clickhouse] 2021.08.13 07:18:39.207263 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 2.00 GiB.
[clickhouse] 2021.08.13 07:18:40.121729 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 3.00 GiB.
[clickhouse] 2021.08.13 07:18:41.007783 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 4.00 GiB.

[clickhouse] 2021.08.13 07:18:41.376478 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_REGION) ON _temporary_and_external_tables.`_tmp_15fe9a52-9ace-4f4a-95fe-9a529acebf4a`
[clickhouse] 2021.08.13 07:18:41.376519 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> Complete

[clickhouse] 2021.08.13 07:18:41.376624 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(LO_CUSTKEY, LO_PARTKEY, LO_SUPPKEY, LO_ORDERDATE, LO_REVENUE, LO_SUPPLYCOST) ON sausage.lineorder_all
[clickhouse] 2021.08.13 07:18:41.376872 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(S_SUPPKEY) ON sausage.supplier_all
[clickhouse] 2021.08.13 07:18:41.376937 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(S_SUPPKEY) ON sausage.supplier_all
[clickhouse] 2021.08.13 07:18:41.377040 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(S_SUPPKEY) ON sausage.supplier_local
[clickhouse] 2021.08.13 07:18:41.377061 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:41.377085 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: WithMergeableState -> Complete
[clickhouse] 2021.08.13 07:18:41.377702 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:41.377848 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:41.378010 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:41.378059 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:41.378116 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: WithMergeableState -> Complete
[clickhouse] 2021.08.13 07:18:41.378191 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:41.378421 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1223/1223 marks by primary key, 1223 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:41.378593 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 10000828 rows with 4 streams
[clickhouse] 2021.08.13 07:18:41.834298 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 5.00 GiB.

[clickhouse] 2021.08.13 07:18:41.407156 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Debug> executeQuery: (from 192.168.0.38:49760, initial_query_id: c61a337a-035a-4206-8ccc-605e53a9a457, using production parser) SELECT C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT FROM sausage.customer_local
[clickhouse] 2021.08.13 07:18:41.407450 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:41.407492 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:41.407564 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:41.407801 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1222/1222 marks by primary key, 1222 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:41.407965 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 10000049 rows with 4 streams
[clickhouse] 2021.08.13 07:18:45.015544 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Information> executeQuery: Read 10000049 rows, 797.56 MiB in 3.608359631 sec., 2771355 rows/sec., 221.03 MiB/sec.
[clickhouse] 2021.08.13 07:18:45.015584 [ 51 ] {3acaeee0-9076-4bbd-84f9-1a569afedf54} <Debug> MemoryTracker: Peak memory usage (for query): 54.72 MiB.

[clickhouse] 2021.08.13 07:18:41.407412 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Debug> executeQuery: (from 192.168.0.38:59332, initial_query_id: c61a337a-035a-4206-8ccc-605e53a9a457, using production parser) SELECT C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT FROM sausage.customer_local
[clickhouse] 2021.08.13 07:18:41.407769 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:41.407815 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:41.407878 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:41.408117 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1223/1223 marks by primary key, 1223 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:41.408253 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 9999123 rows with 4 streams
[clickhouse] 2021.08.13 07:18:45.076587 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Information> executeQuery: Read 9999123 rows, 797.45 MiB in 3.669143165 sec., 2725192 rows/sec., 217.34 MiB/sec.
[clickhouse] 2021.08.13 07:18:45.076626 [ 589 ] {5461f568-14d3-48df-9c1f-27175dbf78b7} <Debug> MemoryTracker: Peak memory usage (for query): 53.60 MiB.

[clickhouse] 2021.08.13 07:18:42.619524 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 6.00 GiB.
[clickhouse] 2021.08.13 07:18:43.511399 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 7.00 GiB.
[clickhouse] 2021.08.13 07:18:44.380694 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 8.00 GiB.


[clickhouse] 2021.08.13 07:18:45.086007 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_REGION) ON _temporary_and_external_tables.`_tmp_aa6026e4-da33-44a3-aa60-26e4da33f4a3`
[clickhouse] 2021.08.13 07:18:45.086046 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> Complete

[clickhouse] 2021.08.13 07:18:45.086149 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(LO_CUSTKEY, LO_PARTKEY, LO_SUPPKEY, LO_ORDERDATE, LO_REVENUE, LO_SUPPLYCOST) ON sausage.lineorder_all
[clickhouse] 2021.08.13 07:18:45.086600 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:45.086751 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_all
[clickhouse] 2021.08.13 07:18:45.086913 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> ContextAccess (default): Access granted: SELECT(C_CUSTKEY, C_NAME, C_ADDRESS, C_CITY, C_NATION, C_REGION, C_PHONE, C_MKTSEGMENT) ON sausage.customer_local
[clickhouse] 2021.08.13 07:18:45.086946 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: FetchColumns -> WithMergeableState
[clickhouse] 2021.08.13 07:18:45.086993 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> InterpreterSelectQuery: WithMergeableState -> Complete
[clickhouse] 2021.08.13 07:18:45.087042 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Key condition: unknown
[clickhouse] 2021.08.13 07:18:45.087255 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Selected 5/5 parts by partition key, 5 parts by primary key, 1223/1223 marks by primary key, 1223 marks to read from 5 ranges
[clickhouse] 2021.08.13 07:18:45.087387 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> sausage.customer_local (3dd3808e-694d-4a82-bdd3-808e694dca82) (SelectExecutor): Reading approx. 10000828 rows with 4 streams
[clickhouse] 2021.08.13 07:18:45.245808 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Debug> MemoryTracker: Current memory usage (for query): 9.00 GiB.
[clickhouse] 2021.08.13 07:18:45.481581 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> StorageDistributed (customer_all): (ecs-sausage-test-0012:9000) Cancelling query
[clickhouse] 2021.08.13 07:18:45.482085 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Trace> StorageDistributed (customer_all): (ecs-sausage-test-0013:9000) Cancelling query
[clickhouse] 2021.08.13 07:18:45.545340 [ 50 ] {c61a337a-035a-4206-8ccc-605e53a9a457} <Error> executeQuery: Code: 241, e.displayText() = DB::Exception: Memory limit (for query) exceeded: would use 9.32 GiB (attempt to allocate chunk of 4412352 bytes), maximum: 9.31 GiB: (avg_value_size_hint = 27, avg_chars_size = 22.8, limit = 8192): (while reading column C_NAME): (while reading from part /var/lib/clickhouse/store/3dd/3dd3808e-694d-4a82-bdd3-808e694dca82/all_11_16_1/ from mark 272 with max_rows_to_read = 8192): While executing MergeTreeThread: While processing  GLOBAL ANY LEFT JOIN c AS c ON C_CUSTKEY = LO_CUSTKEY (version 21.7.5.29 (official build)) (from [::1]:46614) (in query: SELECT toYear(LO_ORDERDATE) AS year, sum(LO_REVENUE - LO_SUPPLYCOST) AS profit FROM sausage.lineorder_all l GLOBAL ANY left JOIN sausage.customer_all c ON (c.C_CUSTKEY = l.LO_CUSTKEY) GLOBAL ANY left JOIN sausage.supplier_all s ON (s.S_SUPPKEY = l.LO_SUPPKEY) GLOBAL ANY left JOIN sausage.part_all p ON (p.P_PARTKEY = l.LO_PARTKEY) WHERE C_REGION = 'AMERICA' GROUP BY year ORDER BY year;), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x8d30bda in /usr/bin/clickhouse
1. DB::Exception::Exception<char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*&&, char const*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) @ 0x8d465c9 in /usr/bin/clickhouse
2. MemoryTracker::allocImpl(long, bool) @ 0x8d45f7c in /usr/bin/clickhouse
3. MemoryTracker::allocImpl(long, bool) @ 0x8d45cd4 in /usr/bin/clickhouse
4. DB::SerializationString::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const @ 0xf6090e9 in /usr/bin/clickhouse
5. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::__1::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > >*) const @ 0xf5d6495 in /usr/bin/clickhouse
6. DB::MergeTreeReaderWide::readData(DB::NameAndTypePair const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, bool, unsigned long, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, COW<DB::IColumn>::immutable_ptr<DB::IColumn> > > >&) @ 0x104c0f12 in /usr/bin/clickhouse
7. DB::MergeTreeReaderWide::readRows(unsigned long, bool, unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&) @ 0x104bffcb in /usr/bin/clickhouse
8. DB::MergeTreeRangeReader::DelayedStream::finalize(std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&) @ 0x1092408a in /usr/bin/clickhouse
9. DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&) @ 0x10928b36 in /usr/bin/clickhouse
10. DB::MergeTreeRangeReader::read(unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&) @ 0x109273b6 in /usr/bin/clickhouse
11. DB::MergeTreeBaseSelectProcessor::readFromPartImpl() @ 0x1091f9f3 in /usr/bin/clickhouse
12. DB::MergeTreeBaseSelectProcessor::readFromPart() @ 0x109206cd in /usr/bin/clickhouse
13. DB::MergeTreeBaseSelectProcessor::generate() @ 0x1091eeab in /usr/bin/clickhouse
14. DB::ISource::tryGenerate() @ 0x106d2615 in /usr/bin/clickhouse
15. DB::ISource::work() @ 0x106d21fa in /usr/bin/clickhouse
16. DB::SourceWithProgress::work() @ 0x108a35aa in /usr/bin/clickhouse
17. ? @ 0x1070ccbd in /usr/bin/clickhouse
18. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0x10709851 in /usr/bin/clickhouse
19. DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) @ 0x1070827c in /usr/bin/clickhouse
20. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x1071586a in /usr/bin/clickhouse
21. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x10715a70 in /usr/bin/clickhouse
22. DB::GlobalSubqueriesMatcher::Data::addExternalStorage(std::__1::shared_ptr<DB::IAST>&, bool) @ 0xf8f290b in /usr/bin/clickhouse
23. DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0xf8d47ef in /usr/bin/clickhouse
24. DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0xf8d469b in /usr/bin/clickhouse
25. DB::InDepthNodeVisitor<DB::GlobalSubqueriesMatcher, false, std::__1::shared_ptr<DB::IAST> >::visit(std::__1::shared_ptr<DB::IAST>&) @ 0xf8d469b in /usr/bin/clickhouse
26. DB::ExpressionAnalyzer::initGlobalSubqueriesAndExternalTables(bool) @ 0xf8d003a in /usr/bin/clickhouse
27. DB::ExpressionAnalyzer::ExpressionAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, std::__1::shared_ptr<DB::Context const>, unsigned long, bool, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0xf8cfdc3 in /usr/bin/clickhouse
28. DB::SelectQueryExpressionAnalyzer::SelectQueryExpressionAnalyzer(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::TreeRewriterResult const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, bool, DB::SelectQueryOptions const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, DB::SubqueryForSet, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, DB::SubqueryForSet> > >, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0xfad61ba in /usr/bin/clickhouse
29. ? @ 0xfadcca4 in /usr/bin/clickhouse
30. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0xfad7e1b in /usr/bin/clickhouse
31. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xfad66be in /usr/bin/clickhouse


0 rows in set. Elapsed: 7.970 sec. 

Received exception from server (version 21.7.5):
Code: 241. DB::Exception: Received from localhost:9000. DB::Exception: Memory limit (for query) exceeded: would use 9.32 GiB (attempt to allocate chunk of 4412352 bytes), maximum: 9.31 GiB: (avg_value_size_hint = 27, avg_chars_size = 22.8, limit = 8192): (while reading column C_NAME): (while reading from part /var/lib/clickhouse/store/3dd/3dd3808e-694d-4a82-bdd3-808e694dca82/all_11_16_1/ from mark 272 with max_rows_to_read = 8192): While executing MergeTreeThread: While processing  GLOBAL ANY LEFT JOIN c AS c ON C_CUSTKEY = LO_CUSTKEY. 

clickhouse.service.consul :)  